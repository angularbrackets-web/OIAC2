---
import { getUtmCounts } from '../../graphql/utm-counts';

const utmData = await getUtmCounts();
//console.log(utmData);
const totalHits = utmData.reduce((sum, row) => sum + row.visits, 0);
const totalDonations = utmData.reduce((sum, row) => sum + row.donations, 0);
const conversionRate = totalHits > 0 ? ((totalDonations / totalHits) * 100).toFixed(1) : "0.0";
---

<html>
  <head>
    <title>Admin - UTM Report</title>
    <style>
      body {
        font-family: sans-serif;
        background: #f5f7fa;
        padding: 2rem;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 2rem;
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      }
      th, td {
        padding: 1rem;
        border-bottom: 1px solid #e0e0e0;
        text-align: left;
      }
      th {
        background-color: #f0f0f0;
      }
    </style>
  </head>
  <body>
    <h1>UTM Tracking Report</h1>
    <p><strong>Total Visits:</strong> {totalHits}</p>
    <p><strong>Total Donation Clicks:</strong> {totalDonations}</p>
    <p><strong>Overall Conversion Rate:</strong> {conversionRate}%</p>

    <table>
      <thead>
        <tr>
          <th>Date</th>
          <th>Source</th>
          <th>Visits</th>
          <th>Donations</th>
          <th>Conversion Rate</th>
        </tr>
      </thead>
      <tbody>
        {utmData.map(row => (
          <tr>
            <td>{row.date}</td>
            <td>{row.source}</td>
            <td>{row.visits}</td>
            <td>{row.donations}</td>
            <td>{row.conversionRate}</td>
          </tr>
        ))}
      </tbody>
    </table>

    
  </body>
</html>
