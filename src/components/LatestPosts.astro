---
import {getPosts, type OIAC_Post} from '../graphql/posts'
import {type OIAC_PostImage} from '../graphql/posts'
import {getEventsForMonths} from '../graphql/events'
import {type OIAC_Event} from '../graphql/events'
import { isObjectEmpty } from '../helper'

const posts : Array<OIAC_Post> = await getPosts()
---
<!-- <div class="w-full md:w-1/2 md:mx-auto">
    <div class="slide-container w-full rounded-3xl my-3 relative bg-gray-200 text-cyan-950 flex-1">
        <button class="btn-navigate absolute left-5 top-[350px] text-emerald-300 text-6xl w-[75px] h-[75px] rounded-full items-center justify-center bg-gray-950 opacity-75 hover:opacity-90 hover:text-lime-600" data-direction="Prev">&#171;</button>
        <button class="btn-navigate absolute right-5 top-[350px] text-emerald-300 text-6xl w-[75px] h-[75px] rounded-full items-center justify-center bg-gray-950 opacity-75 hover:opacity-90 hover:text-lime-600" data-direction="Next">&#187;</button>

        {posts.map(post => (
            <div class="post-slide hidden">
                
                <div class="">
                    <img src={post.image[0].url} alt={post.title} class="rounded-t-3xl" />
                </div>
                <div class="text-emarald-800 py-10 px-3 min-h-24">
                                <h4 class="text-emarald-950 font-bold text-center mb-5 text-2xl">{post.title}</h4>
                                
                                {post.content.length > 0 && (
                                    post.content.map(content => (
                                        <p class="my-5">{content}</p>
                                    ))
                                )}

                                {!isObjectEmpty(post.link) && post.link !== null && (
                                    <a href={post.link.url} target="_blank" class="my-5 bg-emerald-500 hover:bg-emerald-700 text-white p-2 px-5 rounded-lg">{post.link.text}</a>
                                )}
                            </div>
            </div>
        ))}
    </div>
</div> -->

<div class="px-4 p-2 md:px-8 md:py-2 mx-auto">
    <div class="container mt-5">
        <div class="flex flex-wrap gap-10">
        {posts.map(post => (
            <div class="grow">
                <img src={post.image[0].url} alt={post.title} class="rounded-lg w-[350px]" />
            </div>
        ))}
        </div>
    </div>
</div>

<script>
    import { slide } from "astro:transitions"

    let slideContainer = document.querySelector('.slide-container') as HTMLDivElement
    const navigationButtons = document.querySelectorAll('.btn-navigate')



    let slides : Array<string>
    type LatestPostData = {
        "Title" : string,
        "Date" : Date,
        "Content" : string
    }
    let currentSlideIndex = 0
    let prevSlideIndex = -1
    let timer: number
    let slideClasses = ['w-full', 'h-[100px]', 'bg-blue-800', 'text-white', 'p-5', 'hidden']
    
    let slideContainers : NodeListOf<HTMLDivElement> = document.querySelectorAll('.post-slide')

    function changeSlide(){
        let currentSlideClassList = slideContainers[currentSlideIndex].classList
        
        if(prevSlideIndex !== -1){
            let prevSlideClassList = slideContainers[prevSlideIndex].classList 
            if(prevSlideClassList.contains('block'))
                prevSlideClassList.remove('block')
            if(!prevSlideClassList.contains('hidden'))
                prevSlideClassList.add('hidden')
        }
        
        currentSlideClassList.remove('hidden')
        currentSlideClassList.add('block')
        
        prevSlideIndex = currentSlideIndex

        if(currentSlideIndex < slideContainers.length -1)
            currentSlideIndex++
        else currentSlideIndex=0

        timer = setTimeout(changeSlide, 3000)

    }

    changeSlide()

    function moveSlidePrevOrNext(direction:string){
        let moveSlideIndex = (currentSlideIndex === 0) ? slideContainers.length-1 : currentSlideIndex - 1
        if(direction === 'Prev'){
            if(moveSlideIndex===0){
                currentSlideIndex=slideContainers.length-1
            }
            else{
                currentSlideIndex = moveSlideIndex - 1
            }
        }else{
            if(moveSlideIndex === slideContainers.length -1){
                currentSlideIndex=0
            }
            else {
                currentSlideIndex = moveSlideIndex + 1
            }
        }

        clearTimeout(timer)
        timer=0
        
        changeSlide()
    }

    navigationButtons.forEach(btn => btn.addEventListener('click', e => {
        let btn = e.target && (e.target) as HTMLButtonElement
        let direction = btn?.getAttribute('data-direction') as string
        moveSlidePrevOrNext(direction)
    }))
    

</script>