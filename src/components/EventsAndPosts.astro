---
import {getPosts, type OIAC_Post} from '../graphql/posts'
import {type OIAC_PostImage} from '../graphql/posts'
import {getEventsForMonths} from '../graphql/events'
import {type OIAC_Event} from '../graphql/events'
import { isObjectEmpty } from '../helper'
//import {MarkdownBlock, MarkdownSpan, MarkdownElement} from "https://md-block.verou.me/md-block.js"
// import {MarkdownBlock, MarkdownSpan, MarkdownElement} from "md-block"
// import { marked } from 'marked'

const posts : Array<OIAC_Post> = await getPosts()


let currentMonth = new Date().getMonth() + 1
const eventsForTheMonth : Array<OIAC_Event> = await getEventsForMonths([currentMonth])

const date = new Date()
const monthName = date.toLocaleString('default', { month: 'long' })
const year = date.getFullYear()
---

<div class="px-4 p-2 md:px-8 md:py-2 mx-auto">
    <div class="container mt-5">
        
        <!-- Web View -->
        <div class="flex gap-5">

            <!-- Posts -->
            <div class="w-full md:w-1/2 flex flex-col">
                <div class="slide-container w-full rounded-3xl my-3 relative bg-gray-200 text-cyan-950 flex-1">
                    <button class="btn-navigate absolute left-5 top-[30vh] min-[400px]:top-[50vh] text-emerald-300 text-4xl w-[50px] h-[50px] rounded-full items-center justify-center bg-gray-950 opacity-75 hover:opacity-90 hover:text-lime-600" data-direction="Prev">&#171;</button>
                    <button class="btn-navigate absolute right-5 top-[30vh] min-[400px]:top-[50vh] text-emerald-300 text-4xl w-[50px] h-[50px] rounded-full items-center justify-center bg-gray-950 opacity-75 hover:opacity-90 hover:text-lime-600" data-direction="Next">&#187;</button>

                    {posts.map(post => (
                        <div class="post-slide hidden">
                            
                            <div class="">
                                <img src={post.image[0].url} alt={post.title} class="rounded-t-3xl" />
                            </div>
                            <div class="text-emarald-800 py-10 px-3 min-h-24">
                                

                                {!isObjectEmpty(post.link) && post.link !== null && (
                                    <a href={post.link.url} target="_blank" class="my-5 bg-emerald-500 hover:bg-emerald-700 text-white p-2 px-5 rounded-lg">{post.link.text}</a>
                                )}
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            <!-- Events -->
            <div class="bg-gray-500 text-gray-50 rounded-3xl my-3 hidden md:block w-full md:w-1/2 flex flex-col">
                <div class="bg-gray-600 text-gray-50 rounded-t-3xl font-bold text-2xl py-10 px-3 text-center">
                    <h4 class="text-left pl-5">Events at OIAC - {monthName}&nbsp;{year}</h4>
                </div>
                
                {eventsForTheMonth.map(event => (
                    <div class="grid grid-cols-4 gap-5 text-xl border-b border-gray-800">
                        <div class="text-center p-1 pt-3">
                            {event.schedules.length > 0 && (
                                event.schedules.map(schedule => (
                                <div class="mb-3">
                                    <h4 class="text-xl font-bold text-cyan-50">{schedule.date}</h4>
                                    <h4 class="text-sm italic">{schedule.time}</h4>
                                </div>
                                ))
                            )}
                        </div>
                        <div class="text-left p-1 pt-3 pl-3 col-span-3 border-l border-gray-800">
                            <h3 class="text-2xl font-bold mb-5 text-cyan-50">{event.title}</h3>
                            
                            {event.description && (
                                <div class="text-sm">
                                    <Fragment set:html={event.description.html}  />   
                                </div>                             
                            )}
                            
                        </div>
                    </div>
                ))}
                <p class="h-5"></p>
            </div>

        </div>
        
        <!-- Mobile View -->
        <div class="bg-gray-500 border-cyan-400 md:hidden rounded-xl text-gray-50">
            <div class="bg-gray-600 p-3 font-semibold tracking-wide text-left rounded-t-2xl text-2xl text-gray-50">
                <h4>Events at OIAC - {monthName}&nbsp;{year}</h4>
            </div>

            {eventsForTheMonth.map(event => (
                <div class="p-5 border-b border-gray-700">
                    {event.schedules.length > 0 && (
                        event.schedules.map(schedule => (
                        <h6 class="italic text-sm font-bold">{schedule.date}</h6>
                        <h6 class="italic text-sm">{schedule.time}</h6>                        
                        ))
                    )}
                    <h4 class="text-xl font-bold text-cyan-50 mb-3">{event.title}</h4>
                    <div class="text-sm">
                        <Fragment set:html={event.description.html}  />   
                    </div>
                </div>
            ))}
            <div class="p-1"><p>&nbsp;</p></div>
        </div>

        
    </div>
</div>

<script>
    import { slide } from "astro:transitions"

    let slideContainer = document.querySelector('.slide-container') as HTMLDivElement
    const navigationButtons = document.querySelectorAll('.btn-navigate')



    let slides : Array<string>
    type LatestPostData = {
        "Title" : string,
        "Date" : Date,
        "Content" : string
    }
    let latestPostsData : Array<LatestPostData> = [{
        Title:"One",
        Date : new Date(),
        Content : "111 1111111 11111"
        },
        {
        Title:"Two",
        Date : new Date(),
        Content : "222 2222222 22222"
        },
        {
        Title:"Three",
        Date : new Date(),
        Content : "333 3333333 33333"
        },
        {
        Title:"Four",
        Date : new Date(),
        Content : "444 4444444 44444"
        }
    ]
    let currentSlideIndex = 0
    let prevSlideIndex = -1
    let timer: number
    let slideClasses = ['w-full', 'h-[100px]', 'bg-blue-800', 'text-white', 'p-5', 'hidden']
    
    let slideContainers : NodeListOf<HTMLDivElement> = document.querySelectorAll('.post-slide')

    // function prepareSlides(){
    //     latestPostsData.map((post, i) => {
    //         let slideDiv = document.createElement("div")
    //         slideDiv.id = `slide${i}`
    //         slideDiv.classList.add(...slideClasses)
    //         slideDiv.classList.add(slideDiv.id)
    //         slideContainer.appendChild(slideDiv)
    //         slideContainers.push(slideDiv)

    //         let slideTitle = document.createElement("h1")
    //         slideTitle.innerText = post.Title
    //         slideDiv.appendChild(slideTitle)

    //         let slideContent = document.createElement('p')
    //         slideContent.textContent = post.Content
    //         slideDiv.appendChild(slideContent)
    //     })
    // }
    
    function changeSlide(){
        let currentSlideClassList = slideContainers[currentSlideIndex].classList
        
        if(prevSlideIndex !== -1){
            let prevSlideClassList = slideContainers[prevSlideIndex].classList 
            if(prevSlideClassList.contains('block'))
                prevSlideClassList.remove('block')
            if(!prevSlideClassList.contains('hidden'))
                prevSlideClassList.add('hidden')
        }
        
        currentSlideClassList.remove('hidden')
        currentSlideClassList.add('block')
        
        prevSlideIndex = currentSlideIndex

        if(currentSlideIndex < slideContainers.length -1)
            currentSlideIndex++
        else currentSlideIndex=0

        timer = setTimeout(changeSlide, 5000)

    }

    // prepareSlides()
    changeSlide()

    function moveSlidePrevOrNext(direction:string){
        let moveSlideIndex = (currentSlideIndex === 0) ? slideContainers.length-1 : currentSlideIndex - 1
        if(direction === 'Prev'){
            if(moveSlideIndex===0){
                currentSlideIndex=slideContainers.length-1
            }
            else{
                currentSlideIndex = moveSlideIndex - 1
            }
        }else{
            if(moveSlideIndex === slideContainers.length -1){
                currentSlideIndex=0
            }
            else {
                currentSlideIndex = moveSlideIndex + 1
            }
        }

        clearTimeout(timer)
        timer=0
        
        changeSlide()
    }

    navigationButtons.forEach(btn => btn.addEventListener('click', e => {
        let btn = e.target && (e.target) as HTMLButtonElement
        let direction = btn?.getAttribute('data-direction') as string
        moveSlidePrevOrNext(direction)
    }))
    

</script>