---

---

<div class="bg-terracottaRed px-4 p-2 md:px-8 md:py-2 mx-auto">
    <div class="container mt-5">
        <div class="rounded-xl text-gray-100 p-5 md:p-20">
            <h2 class="text-4xl font-black mb-5">Sign up for our Newsletter</h2>
            <p class="text-lg my-5">Be among the first to know our updates.</p>

            <form class="email-subscribe-form w-full max-w-lg">
                <div class="flex flex-wrap -mx-3 mb-6">
                    <div class="w-full px-3">
                        <label class="block uppercase tracking-wide text-xs font-bold mb-2" for="newsletter-email">
                            Email
                        </label>
                        <input class="appearance-none block w-full bg-gray-300 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" id="newsletter-email" required />
                    </div>
                </div>
                <div>
                    <button type="submit" class="email-subscribe bg-wood hover:bg-wood-lighter text-gray-900 text-lg font-bold py-4 px-10 rounded">
                        Submit
                    </button>
                    
                </div>
                <div class="h-[50px] py-5">
                    <div class="alert-div-newsletter hidden min-w-[20rem] text-center p-3 rounded-xl border-4">
                        
                    </div>
                </div>
                
            </form>
        </div>
    </div>
</div>

<script>
    
    import { isObjectEmpty } from "../helper"
    import type { MailChimpApiResponse } from "../pages/api/newsletter"
    import { showNotification } from "../components/Alert"
    
    const newsletterEmail = document.querySelector("#newsletter-email") as HTMLInputElement
    const emailSubscribeForm = document.querySelector(".email-subscribe-form") as HTMLFormElement
    emailSubscribeForm?.addEventListener("submit", event =>{
        event.preventDefault()

        const formData = {
            members:[
                {
                    email_address: newsletterEmail && (newsletterEmail?.value),
                    status:'subscribed'
                }
            ]
        }

        fetch('/api/newsletter',{
            method:'POST',
            headers:{
                'Content-Type':'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(res => res.json())
        .then(data => {
            
            let response = data as MailChimpApiResponse
            
            if(response.status === 'error')
            {
                handleError(response.error_message)
                return
            }else{
            
            showNotification('success', 'Thank you for subscribing.', 'alert-div-newsletter')
            emailSubscribeForm.reset()
            }
        })
        .catch(error => {
            
            if(!isObjectEmpty(error))
                handleError(error)
        })
        



    })

    

    type mailchimpError = {
        error: string
    }

    const handleError = (err:string) => {
        
        if (err.includes('is already a list member')){
                showNotification('warning', 'You have already subscribed!', 'alert-div-newsletter')
                return
            }
            showNotification('error', 'Sorry! Something went wrong.', 'alert-div-newsletter')
    }

    
</script>